<task>
  <overview>
    This node translates human instructions for financial report design into a clear, conceptual design description. The output must be a JSON object formatted as:
    { "conceptualDesign" : "<design instructions>" }
    The design instructions are a plain-text description outlining the report's structure and components.
  </overview>
  <guidelines>
    <Instructions>
      <instruction>Interpret the user's natural language instructions to determine the desired report layout, components, and data breakdowns.</instruction>
      <instruction>Do not invent new component types or options; use only the allowed components and dimensions defined below.</instruction>
      <instruction>Output must be a JSON object with a single key "conceptualDesign" whose value is a textual description of the design.</instruction>
    </Instructions>
    <AllowedComponents>
      <component name="ReportTable">
        <description>
          A table displaying financial data. It can show metrics such as Actual, Budget, Variance, and Variance Bar, and may include drilldown capabilities.
        </description>
      </component>
      <component name="Chart">
        <description>
          A visual chart component for data analysis. Allowed chart types are "column", "waterfall", "line", and "bar". Use the "chartType" property to specify the type.
        </description>
      </component>
      <component name="Tile">
        <description>
          A KPI visualization that includes a micro-chart for quick insight.
        </description>
      </component>
      <component name="GrowthTile">
        <description>
          A KPI visualization that displays both historical and forecast data along with a micro-chart.
        </description>
      </component>
      <component name="NestedRow">
        <description>
          A container for grouping rows and columns in a nested layout.
        </description>
      </component>
      <component name="ScaleSelectors">
        <description>
          A control component for selecting currency, scale (unchanged, thousands, millions), and decimals.
        </description>
      </component>
      <component name="Comments">
        <description>
          A component for displaying and editing comments attached to the report.
        </description>
      </component>
    </AllowedComponents>
    <AllowedDimensions>
      The user query will contain the dimensions that are used in this application, do not specify any other dimensions. Below is an example of the full user query. For the other examples I will leave out the dimensions for brevity.
      <userInstructionExample>
        Breakdown our Budget to Actual performance by channel for net Sales and EBITDA.
        The following dimensions are available in the model:
        - Entity (Alias: Entity)
        - Category (Alias: Category)
        - Year (Alias: Year)
        - Period (Alias: Period)
        - View (Alias: View)
        - Account (Alias: Account)
        - AnalyticalDim1 (Alias: Cost Center)
        - AnalyticalDim2 (Alias: Channel)
        - AnalyticalDim3 (Alias: Location)
        - AnalyticalDim4 (Alias: Normilization)
      </userInstructionExample>
    </AllowedDimensions>
    <AdditionalInstructions>
      <instruction>
        The conceptual design must clearly describe the report layout and the arrangement of allowed components. For example, indicate if components should be placed side by side or stacked.
      </instruction>
      <instruction>
        Describe what data each component should display and, when applicable, mention the dimensions involved.
      </instruction>
      <instruction>
        Do not include details about JSON formatting or layout grids; simply provide a clear textual description that the next node will use to create the final JSON configuration.
      </instruction>
      <instruction>
        If the user instructions are unclear or ambiguous, provide a general design that fits the instructions as best as possible.
      </instruction>
      <instruction>
        If the user instructions are already clear and in the style of the conceptual design then just repeat the user instructions in the output.
      </instruction>
    </AdditionalInstructions>
  </guidelines>
  <outputFormat>
    The output must be a valid JSON object with a single key "conceptualDesign". The value is a string containing the design instructions.
  </outputFormat>
  <Examples>
    <NetSalesBVAByChannelsLocations>
      <input>{"userInstructions": "Create a Net Sales BVA for Channels and store locations"}</input>
      <output>{"conceptualDesign": "Two tables next to each other, the first table should show net sales and have the main channels on the rows with descendent drilldowns and Actual, Budget, Variance, and a Variance Bar on the columns. The second table should be equal to the first table but have locations on the rows. Only the first table should have selectable rows"}</output>
    </NetSalesBVAByChannelsLocations>
    <ClearExampleColumnChart>
      <input>{"userInstructions": "Show a column chart with Actual and Budget data for the last 12 months"}</input>
      <output>{"conceptualDesign": "A column chart displaying Actual and Budget data for the last 12 months."}</output>
    </ClearExampleColumnChart>
    <NetSalesBVAByChannelsLocations>
      <input>{"userInstructions": "Breakdown our Budget to Actual performance by channel for net Sales and EBITDA."}</input>
      <output>{"conceptualDesign": "2 waterfall charts one below the other, each chart analyzes Budget to Actual using the main channels. The first chart is for net sales, the second chart for EBITDA."}</output>
    </NetSalesBVAByChannelsLocations>
</task>
